#if !canImport(ObjectiveC)
import XCTest

extension AttributesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributesTests = [
        ("test_initialzation", test_initialzation),
        ("test_namespace", test_namespace),
    ]
}

extension CommentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CommentTests = [
        ("test_comment", test_comment),
        ("test_prettyXHTMLString", test_prettyXHTMLString),
    ]
}

extension DocumentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DocumentTests = [
        ("test_detectXHTMLInfo", test_detectXHTMLInfo),
        ("test_initialization", test_initialization),
        ("test_template", test_template),
        ("test_title", test_title),
        ("test_tree", test_tree),
    ]
}

extension ElementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ElementTests = [
        ("test_abbr", test_abbr),
        ("test_base", test_base),
        ("test_classSelector", test_classSelector),
        ("test_data", test_data),
        ("test_datalist", test_datalist),
        ("test_equatable", test_equatable),
        ("test_globalAttributes_dynamicMemberLookup", test_globalAttributes_dynamicMemberLookup),
        ("test_globalAttributes", test_globalAttributes),
        ("test_headingElements", test_headingElements),
        ("test_html", test_html),
        ("test_id", test_id),
        ("test_namespace", test_namespace),
        ("test_prettyXHTMLString", test_prettyXHTMLString),
        ("test_ruby", test_ruby),
        ("test_script", test_script),
        ("test_selection", test_selection),
        ("test_simpleTextContent", test_simpleTextContent),
        ("test_style", test_style),
        ("test_table_calendar", test_table_calendar),
        ("test_table", test_table),
        ("test_xhtmlString_textInScript", test_xhtmlString_textInScript),
        ("test_xhtmlString", test_xhtmlString),
    ]
}

extension NamesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NamesTests = [
        ("test_attributeName", test_attributeName),
        ("test_NCName", test_NCName),
        ("test_QName", test_QName),
    ]
}

extension Node_XMLNodeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Node_XMLNodeTests = [
        ("test_attributes", test_attributes),
        ("test_comment", test_comment),
        ("test_node", test_node),
        ("test_processingInstruction", test_processingInstruction),
        ("test_text", test_text),
    ]
}

extension ParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserTests = [
        ("test_element", test_element),
        ("test_errors_document", test_errors_document),
        ("test_parseSimpleXHTML5", test_parseSimpleXHTML5),
        ("test_pre_element", test_pre_element),
        ("test_pre", test_pre),
    ]
}

extension ProcessingInstructionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProcessingInstructionTests = [
        ("test_XMLStyleSheet", test_XMLStyleSheet),
    ]
}

extension StringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringTests = [
        ("test_ampersandEncoding", test_ampersandEncoding),
    ]
}

extension VersionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VersionTests = [
        ("test_initialization", test_initialization),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AttributesTests.__allTests__AttributesTests),
        testCase(CommentTests.__allTests__CommentTests),
        testCase(DocumentTests.__allTests__DocumentTests),
        testCase(ElementTests.__allTests__ElementTests),
        testCase(NamesTests.__allTests__NamesTests),
        testCase(Node_XMLNodeTests.__allTests__Node_XMLNodeTests),
        testCase(ParserTests.__allTests__ParserTests),
        testCase(ProcessingInstructionTests.__allTests__ProcessingInstructionTests),
        testCase(StringTests.__allTests__StringTests),
        testCase(VersionTests.__allTests__VersionTests),
    ]
}
#endif
